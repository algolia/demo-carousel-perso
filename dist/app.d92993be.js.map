{"version":3,"sources":["widgets/Carousel.js","app.js"],"names":["renderCarousel","isFirstRender","widgetParams","hits","container","document","querySelector","wrapper","createElement","classList","add","appendChild","carouselTitle","textContent","title","carouselListContainer","setAttribute","context","style","width","window","innerWidth","getBoundingClientRect","left","ul","innerHTML","map","hit","index","objectID","length","image","genre","join","querySelectorAll","forEach","button","addEventListener","ev","aa","eventName","objectIDs","currentTarget","dataset","id","customCarousel","instantsearch","connectors","connectHits","searchClient","algoliasearch","search","indexName","initIndex","persoSelect","e","location","href","origin","pathname","target","value","referenceHits","history_cumberbatch","color","popularity_score","actors","ongoing_watch","tmdb_id","views_last_7_days","days_to_expire","downey_jr","action_crime","searchParams","URLSearchParams","userToken","get","myCarousels","relatedRef","extraConfig","enablePersonalization","addWidgets","carousel","widgets","indexId","configure","ruleContexts","hitsPerPage","query","EXPERIMENTAL_configureRelatedItems","matchingPatterns","score","start"],"mappings":"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","file":"app.d92993be.js","sourceRoot":"../src","sourcesContent":["/**\n * @requires module:instantsearch\n */\n\nconst renderCarousel = ({ widgetParams, hits }, isFirstRender) => {\n  const container = document.querySelector(widgetParams.container);\n\n  if (isFirstRender) {\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('carousel-single');\n\n    container.appendChild(wrapper);\n\n    const carouselTitle = document.createElement('h2');\n    carouselTitle.textContent = widgetParams.title;\n    wrapper.appendChild(carouselTitle);\n\n    const carouselListContainer = document.createElement('ul');\n    carouselListContainer.classList.add('carousels__list-container');\n    carouselListContainer.setAttribute('id', widgetParams.context);\n    wrapper.appendChild(carouselListContainer);\n\n    wrapper.style.width = `${window.innerWidth -\n      wrapper.getBoundingClientRect().left}px`;\n  }\n\n  const ul = container.querySelector(`ul#${widgetParams.context}`);\n  ul.innerHTML = hits\n    .map(\n      (hit, index) => `\n        <li class=\"analytics\" data-object-id=\"${hit.objectID}\" style=\"${\n        index === hits.length - 1\n          ? `padding-right: ${ul.getBoundingClientRect().left + 180}px`\n          : ''\n      }\">\n            <img src=\"${hit.image}\" alt=\"${hit.title}\">\n            <div class=\"overlay\">\n              <h3>${hit.title}</h3>\n              <ul>\n                ${hit.genre\n                  .map(\n                    (genre) => `\n                  <li>${genre}</li>\n                `\n                  )\n                  .join('')}\n              </ul>\n              <div class=\"button-container\">\n                  <button data-id=\"${hit.objectID}\" class=\"js-fav\">♡</button> \n                  <button data-id=\"${\n                    hit.objectID\n                  }\" class=\"js-watch\">▶️</button> \n                  <button data-id=\"${\n                    hit.objectID\n                  }\" class=\"js-details\">View details</button> \n              </div>\n          </div>\n        </li>\n    `\n    )\n    .join('');\n\n  [...container.querySelectorAll('.js-fav')].forEach((button) => {\n    button.addEventListener('click', (ev) => {\n      aa('clickedObjectIDs', {\n        index: 'perso_movies_carousel',\n        eventName: 'added_to_watchlist_movie',\n        objectIDs: [ev.currentTarget.dataset.id],\n      });\n    });\n  });\n  [...container.querySelectorAll('.js-watch')].forEach((button) => {\n    button.addEventListener('click', (ev) => {\n      aa('clickedObjectIDs', {\n        index: 'perso_movies_carousel',\n        eventName: 'added_to_watchlist_movie',\n        objectIDs: [ev.currentTarget.dataset.id],\n      });\n    });\n  });\n  [...container.querySelectorAll('.js-details')].forEach((button) => {\n    button.addEventListener('click', (ev) => {\n      aa('clickedObjectIDs', {\n        index: 'perso_movies_carousel',\n        eventName: 'added_to_watchlist_movie',\n        objectIDs: [ev.currentTarget.dataset.id],\n      });\n    });\n  });\n};\n\nexport const customCarousel = instantsearch.connectors.connectHits(\n  renderCarousel\n);\n","import { customCarousel } from './widgets/Carousel';\n\n/* global algoliasearch instantsearch */\nconst searchClient = algoliasearch(\n  '8C8FZ01CFC',\n  'dba2ba1776fea66e298b834915331de1'\n);\n\nconst search = instantsearch({\n  indexName: 'perso_movies_carousel',\n  searchClient,\n});\n\nconst index = searchClient.initIndex('perso_movies_carousel');\n\n// for (let index = 0; index < 20; index++) {\n//   aa('clickedFilters', {\n//     userToken: 'action_crime',\n//     index: 'perso_movies_carousel',\n//     eventName: 'added_to_watchlist_movie',\n//     filters: ['genre:Action'],\n//   });\n\n//   aa('viewedFilters', {\n//     userToken: 'action_crime',\n//     index: 'perso_movies_carousel',\n//     eventName: 'detailed_movie',\n//     filters: ['genre:Crime'],\n//   });\n// }\n\n// index\n//   .search('', {\n//     facetFilters: 'actors:Benedict Cumberbatch',\n//     hitsPerPage: 200,\n//   })\n//   .then(({ hits }) => {\n//     console.log(hits);\n//     hits.forEach((hit) => {\n//       if (Math.random() < 0.3) {\n//         aa('convertedObjectIDs', {\n//           eventName: 'watched_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//       if (Math.random() < 0.5) {\n//         aa('clickedObjectIDs', {\n//           eventName: 'added_to_watchlist_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//       if (Math.random() < 0.9) {\n//         aa('viewedObjectIDs', {\n//           eventName: 'detailed_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//     });\n//   });\n// index\n//   .search('', {\n//     filters: 'genre:History',\n//     hitsPerPage: 200,\n//   })\n//   .then(({ hits }) => {\n//     console.log(hits);\n//     hits.forEach((hit) => {\n//       if (Math.random() < 0.3) {\n//         aa('convertedObjectIDs', {\n//           eventName: 'watched_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//       if (Math.random() < 0.5) {\n//         aa('clickedObjectIDs', {\n//           eventName: 'added_to_watchlist_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//       if (Math.random() < 0.9) {\n//         aa('viewedObjectIDs', {\n//           eventName: 'detailed_movie',\n//           index: 'perso_movies_carousel',\n//           objectIDs: [hit.objectID],\n//           userToken: 'history_cumberbatch',\n//         });\n//       }\n//     });\n//   });\n// index\n//   .search('', {\n//     facetFilters: ['genre: History'],\n//   })\n//   .then(({ hits }) => {\n//     console.log(hits);\n//     aa('convertedObjectIDs', {\n//       eventName: 'watched_movie',\n//       index: 'perso_movies_carousel',\n//       objectIDs: hits\n//         .filter((hit) => Math.random() < 0.3)\n//         .map((hit) => hit.objectID),\n//       userToken: 'history_cumberbatch',\n//     });\n//     aa('clickedObjectIDs', {\n//       eventName: 'added_to_watchlist_movie',\n//       index: 'perso_movies_carousel',\n//       objectIDs: hits\n//         .filter((hit) => Math.random() < 0.5)\n//         .map((hit) => hit.objectID),\n//       userToken: 'history_cumberbatch',\n//     });\n//     aa('viewedObjectIDs', {\n//       eventName: 'detailed_movie',\n//       index: 'perso_movies_carousel',\n//       objectIDs: hits\n//         .filter((hit) => Math.random() < 0.9)\n//         .map((hit) => hit.objectID),\n//       userToken: 'history_cumberbatch',\n//     });\n//   });\n// aa();\n\nconst persoSelect = document.querySelector('#user_select');\npersoSelect.addEventListener('change', (e) => {\n  window.location.href = `${window.location.origin}${window.location.pathname}?userToken=${e.target.value}`;\n});\n\n// Fetch from your own DB\nconst referenceHits = {\n  history_cumberbatch: {\n    title: 'The Imitation Game',\n    image: 'https://image.tmdb.org/t/p/w154/ntZGfHt4d73A9fDD4KUN4nbDQlq.jpg',\n    color: '#192229',\n    popularity_score: 108.4335114104872,\n    actors: ['Benedict Cumberbatch', 'Keira Knightley', 'Matthew Goode'],\n    genre: ['History', 'Drama', 'Thriller', 'War'],\n    ongoing_watch: [],\n    tmdb_id: 205596,\n    views_last_7_days: 596898,\n    days_to_expire: 44,\n    objectID: '439434880',\n  },\n\n  downey_jr: {\n    title: 'Sherlock Holmes',\n    image: 'https://image.tmdb.org/t/p/w154/momkKuWburNTqKBF6ez7rvhYVhE.jpg',\n    popularity_score: 76.33650710838658,\n    actors: ['Robert Downey Jr.', 'Jude Law', 'Rachel McAdams'],\n    genre: [\n      'Adventure',\n      'Drama',\n      'Action',\n      'Comedy',\n      'Thriller',\n      'Crime',\n      'Mystery',\n    ],\n    tmdb_id: 10528,\n    views_last_7_days: 337051,\n    days_to_expire: 24,\n    objectID: '440017250',\n  },\n\n  action_crime: {\n    title: 'The Dark Knight',\n    image: 'https://image.tmdb.org/t/p/w154/qJ2tW6WMUDux911r6m7haRef0WH.jpg',\n    color: '#2B3D4D',\n    popularity_score: 87.26775638632606,\n    actors: ['Christian Bale', 'Heath Ledger', 'Aaron Eckhart'],\n    genre: ['Drama', 'Action', 'Crime', 'Thriller'],\n    ongoing_watch: ['user_4'],\n    tmdb_id: 155,\n    views_last_7_days: 147970,\n    days_to_expire: 19,\n    objectID: '439695620',\n  },\n};\n\nconst searchParams = new URLSearchParams(window.location.search);\n\nconst userToken = searchParams.get('userToken');\npersoSelect\n  .querySelector(`option[value=\"${userToken}\"]`)\n  ?.setAttribute('selected', true);\n\nconst myCarousels = userToken\n  ? [\n      // {\n      //   title: 'Trending',\n      //   context: 'trending',\n      //   indexName: 'perso_movies_carousel_trending',\n      // },\n      {\n        title: 'Most Popular',\n        context: 'most-popular',\n        indexName: 'perso_movies_carousel',\n      },\n      // {\n      //   title: 'Last chance',\n      //   context: 'last-chance',\n      //   indexName: 'perso_movies_carousel_last_chance',\n      // },\n\n      {\n        title: 'Fantasy Comedy',\n        context: 'comedy_fantasy',\n        indexName: 'perso_movies_carousel',\n      },\n      {\n        title: 'Because you watched ' + referenceHits[userToken].title,\n        context: 'related',\n        indexName: 'perso_movies_carousel',\n        relatedRef: referenceHits[userToken],\n        extraConfig: {\n          enablePersonalization: true,\n          userToken,\n        },\n      },\n      {\n        title: 'Curated for you',\n        context: 'curated',\n        indexName: 'perso_movies_carousel',\n        extraConfig: {\n          enablePersonalization: true,\n          userToken,\n        },\n      },\n    ]\n  : [\n      // {\n      //   title: 'Trending',\n      //   context: 'trending',\n      //   indexName: 'perso_movies_carousel_trending',\n      // },\n      {\n        title: 'Most Popular',\n        context: 'most-popular',\n        indexName: 'perso_movies_carousel',\n      },\n      // {\n      //   title: 'Last chance',\n      //   context: 'last-chance',\n      //   indexName: 'perso_movies_carousel_last_chance',\n      // },\n\n      {\n        title: 'Fantasy Comedy',\n        context: 'comedy_fantasy',\n        indexName: 'perso_movies_carousel',\n      },\n    ];\n\nconst addWidgets = () => {\n  search.addWidgets(\n    myCarousels.map((carousel) =>\n      instantsearch.widgets\n        .index({\n          indexName: carousel.indexName,\n          indexId: carousel.context,\n        })\n        .addWidgets(\n          !carousel.relatedRef\n            ? [\n                instantsearch.widgets.configure({\n                  ruleContexts: carousel.context,\n                  hitsPerPage: 15,\n                  query: '',\n                  ...carousel.extraConfig,\n                }),\n                customCarousel({\n                  container: '.carousels',\n                  title: carousel.title,\n                  context: carousel.context,\n                }),\n              ]\n            : [\n                instantsearch.widgets.configure({\n                  ruleContexts: carousel.context,\n                  hitsPerPage: 15,\n                  query: '',\n                  ...carousel.extraConfig,\n                }),\n                instantsearch.widgets.EXPERIMENTAL_configureRelatedItems({\n                  hit: carousel.relatedRef,\n                  matchingPatterns: {\n                    genre: { score: 2 },\n                    actors: { score: 3 },\n                  },\n                }),\n                customCarousel({\n                  container: '.carousels',\n                  title: carousel.title,\n                  context: carousel.context,\n                }),\n              ]\n        )\n    )\n  );\n};\n\naddWidgets();\n\nsearch.start();\n\ninstantsearch.widgets.configure({\n  enablePersonalization: true,\n  userToken: 'myToken',\n});\n"]}